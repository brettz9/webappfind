{
  "name": "webappfind",
  "title": "webappfind",
  "id": "jid0-szJdB0Ri3FdiZ7BdwTP8QQCffWs@jetpack",
  "version": "3.0.0",
  "author": "Brett Zamir",
  "contributors": [],
  "main": "index",
  "url": "https://github.com/brettz9/webappfind",
  "homepage": "https://github.com/brettz9/webappfind",
  "description": "Enables an experimental protocol system for allowing the user to supply local files for viewing and editing by web applications",
  "license": "MIT",
  "scripts": {
    "pkg": "pkg src/main.js --targets node7-macos-x64 --out-path bin",
    "copy-polyfill": "node ./copy-polyfill",
    "build-addon": "npm run copy-polyfill && npm run webext-build",
    "build": "npm run pkg",
    "eslint": "eslint *.js src/",
    "webext-lint": "web-ext lint --ignore-files bin/ *.md src/ index.js filetypes.json package.json copy-polyfill.js",
    "webext-run": "web-ext run --ignore-files bin/ *.md src/ index.js filetypes.json package.json copy-polyfill.js",
    "webext-build": "web-ext build --ignore-files bin/ *.md src/ index.js filetypes.json package.json copy-polyfill.js",
    "lint": "npm run eslint && npm run webext-lint"
  },
  "engines": {
    "node": "*"
  },
  "dependencies": {
    "mkdirp": "^0.5.1",
    "webextension-polyfill": "^0.1.1"
  },
  "optionalDependencies": {
    "regedit": "2.2.7"
  },
  "devDependencies": {
    "eslint": "3.19.0",
    "eslint-config-standard": "10.2.1",
    "eslint-plugin-import": "2.3.0",
    "eslint-plugin-node": "4.2.2",
    "eslint-plugin-promise": "3.5.0",
    "eslint-plugin-standard": "3.0.1"
  },
  "keywords": [],
  "bugs": "https://github.com/brettz9/webappfind/issues",
  "repository": {
    "type": "git",
    "url": "https://github.com/brettz9/webappfind.git"
  },
  "preferences": [
    {
      "description": "In order to confine approved web apps from having no more access than they need in order to conduct the approved operations on the specified file, the default behavior is not to send the genuine file path of a selected file to scripts. If you are not concerned with the privacy of your file paths, you can enable this option (e.g., so that your file viewing program can display the current path for you).",
      "type": "bool",
      "name": "revealFilePaths",
      "value": false,
      "title": "Reveal selected file paths to scripts"
    },
    {
      "description": "When the selected file does not find a handler according to your configuration, display the errors.",
      "type": "bool",
      "name": "displayErrors",
      "value": true,
      "title": "Display errors"
    },
    {
      "description": "When a file is matched to a file type, but no protocol is yet registered for the type, visit the registration page designated within the selected file's directory (if present) to give that site a chance to inform you of the protocols and let you choose one if you so decide.",
      "type": "bool",
      "name": "noProtocolFallbackToRegistrationMode",
      "value": true,
      "title": "No registered protocol for detected type: Fallback to registration mode (if present)"
    },
    {
      "description": "When a file is matched to a file type, but no protocol is yet registered for the type nor is a registration page designated within the selected file's directory or one is not allowed, fall back to the directory's designated default handlers.",
      "type": "bool",
      "name": "noProtocolFallbackToDefaultHandlers",
      "value": true,
      "title": "No registered protocol for detected type (nor registration mode): Fallback to designated default handlers (if present)"
    },
    {
      "description": "When a file is matched to a file type, but no protocol is yet registered for the type nor is a registration page designated within the selected file's directory or one is not allowed, nor are default handlers allowed or present, try to fall back to the directory's file hierarchy.",
      "type": "bool",
      "name": "noProtocolFallbackToHierarchy",
      "value": true,
      "title": "No registered protocol for detected type (nor matched registration mode or default handlers): Fallback to the directory's file hierarchy (if present)"
    },
    {
      "description": "When a file type is not detected (or no matches for it are found), try using the file's extension within a web protocol (e.g., if the data file ends with '.js' then look for a web protocol to handle 'js' files).",
      "type": "bool",
      "name": "fallbackToWebProtocolUsingFileExtension",
      "value": true,
      "title": "Fallback to web protocol using file extension (if present)"
    },
    {
      "description": "When a file type is not detected (or no matches for it are found) and if file-extension based web protocol fallbacks are not permitted by you or are not found, open the file in the browser (e.g., if the data file ends with '.js' but no subtype or handler is found for this file then open the JavaScript file in the browser).",
      "type": "bool",
      "name": "fallbackToBrowserUsingFilePath",
      "value": true,
      "title": "Fallback to browser opening the file"
    },
    {
      "description": "When a file type is not detected  (or no matches for it are found) and if file-extension based web protocol fallbacks are not permitted by you or are not found nor did you permit the browser to open the file, launch the file from the desktop (e.g., if the data file ends with '.js' but no subtype or handler is found for this file then open the JavaScript file according to your operating system's desktop).",
      "type": "bool",
      "name": "fallbackToDesktopUsingFilePath",
      "value": false,
      "title": "Fallback to desktop opening the file"
    }
  ]
}
